// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package std_rank

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type CampaignTemplate struct {
	_tab flatbuffers.Table
}

func GetRootAsCampaignTemplate(buf []byte, offset flatbuffers.UOffsetT) *CampaignTemplate {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CampaignTemplate{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsCampaignTemplate(buf []byte, offset flatbuffers.UOffsetT) *CampaignTemplate {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &CampaignTemplate{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *CampaignTemplate) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CampaignTemplate) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *CampaignTemplate) Campaignid() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *CampaignTemplate) MutateCampaignid(n int64) bool {
	return rcv._tab.MutateInt64Slot(4, n)
}

func (rcv *CampaignTemplate) Templategrouplist(obj *TemplateGroup, j int) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		x := rcv._tab.Vector(o)
		x += flatbuffers.UOffsetT(j) * 4
		x = rcv._tab.Indirect(x)
		obj.Init(rcv._tab.Bytes, x)
		return true
	}
	return false
}

func (rcv *CampaignTemplate) TemplategrouplistLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *CampaignTemplate) Templatelist(obj *Templateobj, j int) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		x := rcv._tab.Vector(o)
		x += flatbuffers.UOffsetT(j) * 4
		x = rcv._tab.Indirect(x)
		obj.Init(rcv._tab.Bytes, x)
		return true
	}
	return false
}

func (rcv *CampaignTemplate) TemplatelistLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func CampaignTemplateStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func CampaignTemplateAddCampaignid(builder *flatbuffers.Builder, campaignid int64) {
	builder.PrependInt64Slot(0, campaignid, 0)
}
func CampaignTemplateAddTemplategrouplist(builder *flatbuffers.Builder, templategrouplist flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(templategrouplist), 0)
}
func CampaignTemplateStartTemplategrouplistVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func CampaignTemplateAddTemplatelist(builder *flatbuffers.Builder, templatelist flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(templatelist), 0)
}
func CampaignTemplateStartTemplatelistVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func CampaignTemplateEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
