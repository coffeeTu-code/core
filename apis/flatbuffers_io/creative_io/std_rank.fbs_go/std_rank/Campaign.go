// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package std_rank

import (
	flatbuffers "github.com/google/flatbuffers/go"

	std_rank__Campaign_ "std_rank/Campaign_"
)

type Campaign struct {
	_tab flatbuffers.Table
}

func GetRootAsCampaign(buf []byte, offset flatbuffers.UOffsetT) *Campaign {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Campaign{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsCampaign(buf []byte, offset flatbuffers.UOffsetT) *Campaign {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &Campaign{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *Campaign) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Campaign) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Campaign) Campaignid() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *Campaign) MutateCampaignid(n int64) bool {
	return rcv._tab.MutateInt64Slot(4, n)
}

func (rcv *Campaign) Advertiserid() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *Campaign) MutateAdvertiserid(n int64) bool {
	return rcv._tab.MutateInt64Slot(6, n)
}

func (rcv *Campaign) Packagename() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *Campaign) Costtype() std_rank__Campaign_.costtypeenum {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return std_rank__Campaign_.costtypeenum(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *Campaign) MutateCosttype(n std_rank__Campaign_.costtypeenum) bool {
	return rcv._tab.MutateInt32Slot(10, int32(n))
}

func CampaignStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func CampaignAddCampaignid(builder *flatbuffers.Builder, campaignid int64) {
	builder.PrependInt64Slot(0, campaignid, 0)
}
func CampaignAddAdvertiserid(builder *flatbuffers.Builder, advertiserid int64) {
	builder.PrependInt64Slot(1, advertiserid, 0)
}
func CampaignAddPackagename(builder *flatbuffers.Builder, packagename flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(packagename), 0)
}
func CampaignAddCosttype(builder *flatbuffers.Builder, costtype std_rank__Campaign_.costtypeenum) {
	builder.PrependInt32Slot(3, int32(costtype), 0)
}
func CampaignEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
